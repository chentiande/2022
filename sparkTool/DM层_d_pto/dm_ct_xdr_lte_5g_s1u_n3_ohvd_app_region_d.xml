<AggrSqlConfig topicId="dm_ct_xdr_lte_5g_s1u_n3_ohvd_app_region_d" period="1d"
               desc="城市/业务大类_用户面-4/5G话单-other/http/video/dns(1天)">
      <functions>
	<function>weightedAverage</function>
  </functions>

    <tempTables>
	
    </tempTables>

    <resultTables>
	        <resultTable>
	<sql>
		<![CDATA[
			insert overwrite table ${result_db}.dm_ct_xdr_lte_5g_s1u_n3_ohvd_app_region_d partition(p_date='${p_date}')
		
select substr('${p_start_time}',1,8) as starttime,
province_id as province_id,
max(province_name) as province_name,
region_id as region_id,
max(region_name) as region_name,
app_id as app_id,
max(app_name) as app_name,
max(ue_ambr_ul) as ue_ambr_ul,
max(ue_ambr_dl) as ue_ambr_dl,
max(apn_ambr_ul) as apn_ambr_ul,
max(apn_ambr_dl) as apn_ambr_dl,
sum(duration) as duration,
sum(output_octets) as output_octets,
sum(input_octets) as input_octets,
sum(total_data) as total_data,
sum(output_packet) as output_packet,
sum(input_packet) as input_packet,
sum(ul_ipfrag_packs) as ul_ipfrag_packs,
sum(dl_ipfrag_packs) as dl_ipfrag_packs,
sum(ul_tcp_retrans_packet) as ul_tcp_retrans_packet,
sum(dl_tcp_retrans_packet) as dl_tcp_retrans_packet,
sum(ul_tcp_reordering_packet) as ul_tcp_reordering_packet,
sum(dl_tcp_reordering_packet) as dl_tcp_reordering_packet,
sum(tcp_setup_response_delay) as tcp_setup_response_delay,
sum(tcp_setup_response_delay_cnt) as tcp_setup_response_delay_cnt,
sum(tcp_setup_ack_delay) as tcp_setup_ack_delay,
sum(tcp_setup_ack_delay_cnt) as tcp_setup_ack_delay_cnt,
sum(delay_setup_first_transaction) as delay_setup_first_transaction,
sum(delay_setup_first_transaction_cnt) as delay_setup_first_transaction_cnt,
sum(delay_first_transaction_first_respackt) as delay_first_transaction_first_respackt,
sum(delay_first_transaction_first_respackt_cnt) as delay_first_transaction_first_respackt_cnt,
sum(tcp_connect_request_cnt) as tcp_connect_request_cnt,
sum(tcp_connect_succ_cnt) as tcp_connect_succ_cnt,
sum(tcp_connect_fail_cnt) as tcp_connect_fail_cnt,
sum(tcp_server_response_cnt) as tcp_server_response_cnt,
sum(tcp_server_response_succ_cnt) as tcp_server_response_succ_cnt,
sum(tcp_termeral_response_cnt) as tcp_termeral_response_cnt,
sum(tcp_termeral_response_succ_cnt) as tcp_termeral_response_succ_cnt,
sum(http_bigflow_duration) as http_bigflow_duration,
sum(http_bigflow_duration_cnt) as http_bigflow_duration_cnt,
sum(http_bigflow_input_octets) as http_bigflow_input_octets,
sum(http_smalflow_duration) as http_smalflow_duration,
sum(http_smalflow_duration_cnt) as http_smalflow_duration_cnt,
sum(http_smalflow_input_octets) as http_smalflow_input_octets,
sum(http_download_low_cnt) as http_download_low_cnt,
sum(http_dl_rate_data) as http_dl_rate_data,
sum(http_dl_rate_data_cnt) as http_dl_rate_data_cnt,
sum(http_ul_rate_data) as http_ul_rate_data,
sum(http_ul_rate_data_cnt) as http_ul_rate_data_cnt,
sum(tcp_connect_delay) as tcp_connect_delay,
sum(tcp_connect_delay_cnt) as tcp_connect_delay_cnt,
sum(tcp_termeral_delay_cnt) as tcp_termeral_delay_cnt,
sum(tcp_server_delay_cnt) as tcp_server_delay_cnt,
sum(game_conn_delay) as game_conn_delay,
sum(game_conn_delay_cnt) as game_conn_delay_cnt,
sum(http_tcp_server_delay) as http_tcp_server_delay,
sum(http_tcp_server_delay_cnt) as http_tcp_server_delay_cnt,
sum(http_tcp_termeral_delay) as http_tcp_termeral_delay,
sum(http_tcp_termeral_delay_cnt) as http_tcp_termeral_delay_cnt,
sum(video_tcp_server_delay) as video_tcp_server_delay,
sum(video_tcp_server_delay_cnt) as video_tcp_server_delay_cnt,
sum(video_tcp_termeral_delay) as video_tcp_termeral_delay,
sum(video_tcp_termeral_delay_cnt) as video_tcp_termeral_delay_cnt,
sum(im_tcp_tcp_server_delay) as im_tcp_tcp_server_delay,
sum(im_tcp_tcp_server_delay_cnt) as im_tcp_tcp_server_delay_cnt,
sum(im_tcp_termeral_delay) as im_tcp_termeral_delay,
sum(im_tcp_termeral_delay_cnt) as im_tcp_termeral_delay_cnt,
sum(game_tcp_server_delay) as game_tcp_server_delay,
sum(game_tcp_server_delay_cnt) as game_tcp_server_delay_cnt,
sum(game_tcp_termeral_delay) as game_tcp_termeral_delay,
sum(game_tcp_termeral_delay_cnt) as game_tcp_termeral_delay_cnt,
sum(chkhand_good) as chkhand_good,
sum(chkhand_bad) as chkhand_bad,
sum(rtt_ul_server_good) as rtt_ul_server_good,
sum(rtt_ul_server_bat) as rtt_ul_server_bat,
sum(rtt_dl_termeral_good) as rtt_dl_termeral_good,
sum(rtt_dl_termeral_bat) as rtt_dl_termeral_bat,
sum(ul_packet_loss_rate_good_cnt) as ul_packet_loss_rate_good_cnt,
sum(ul_packet_loss_rate_bat_cnt) as ul_packet_loss_rate_bat_cnt,
sum(dl_packet_loss_rate_good_cnt) as dl_packet_loss_rate_good_cnt,
sum(dl_packet_loss_rate_bat_cnt) as dl_packet_loss_rate_bat_cnt,
sum(n3_other_cnt) as n3_other_cnt,
sum(ul_upload_good) as ul_upload_good,
sum(ul_upload_bat) as ul_upload_bat,
sum(dl_download_good) as dl_download_good,
sum(dl_download_bat) as dl_download_bat,
sum(response_delay) as response_delay,
sum(response_delay_cnt) as response_delay_cnt,
sum(http_request_cnt) as http_request_cnt,
sum(http_succ_cnt) as http_succ_cnt,
sum(http_noresponse_cnt) as http_noresponse_cnt,
sum(http_response_fail_cnt) as http_response_fail_cnt,
sum(http_server_fail_cnt) as http_server_fail_cnt,
sum(http_termeral_fail_cnt) as http_termeral_fail_cnt,
sum(page_open_succ_cnt) as page_open_succ_cnt,
sum(http_respdelay) as http_respdelay,
sum(http_respdelay_cnt) as http_respdelay_cnt,
sum(tcp_request_cnt) as tcp_request_cnt,
sum(tcp_sr_request_succ_cnt) as tcp_sr_request_succ_cnt,
sum(tcp_sr_delay) as tcp_sr_delay,
sum(tcp_sr_delay_cnt) as tcp_sr_delay_cnt,
sum(tcp_send_delay) as tcp_send_delay,
sum(tcp_send_delay_cnt) as tcp_send_delay_cnt,
sum(tcp_receive_delay) as tcp_receive_delay,
sum(tcp_receive_delay_cnt) as tcp_receive_delay_cnt,
sum(datapack_duration) as datapack_duration,
sum(datapack_duration_cnt) as datapack_duration_cnt,
sum(http_bigflow_delay) as http_bigflow_delay,
sum(http_bigflow_delay_cnt) as http_bigflow_delay_cnt,
sum(http_smalflow_delay) as http_smalflow_delay,
sum(http_smalflow_delay_cnt) as http_smalflow_delay_cnt,
sum(tcp_sr_request_cnt) as tcp_sr_request_cnt,
sum(f_packets_response_delay) as f_packets_response_delay,
sum(f_packets_response_delay_cnt) as f_packets_response_delay_cnt,
sum(dns_reply_delay) as dns_reply_delay,
sum(dns_reply_delay_cnt) as dns_reply_delay_cnt,
sum(first_tcp_pageopen_delay_nodns) as first_tcp_pageopen_delay_nodns,
sum(first_tcp_pageopen_delay_nodns_cnt) as first_tcp_pageopen_delay_nodns_cnt,
sum(first_tcp_pageopen_delay) as first_tcp_pageopen_delay,
sum(first_tcp_pageopen_delay_cnt) as first_tcp_pageopen_delay_cnt,
sum(first_screen_delay_nodns) as first_screen_delay_nodns,
sum(first_screen_delay_nodns_cnt) as first_screen_delay_nodns_cnt,
sum(first_screen_delay) as first_screen_delay,
sum(first_screen_delay_cnt) as first_screen_delay_cnt,
sum(first_screen_delaygood) as first_screen_delaygood,
sum(first_screen_delaybad) as first_screen_delaybad,
sum(f_packets_response_delaygood) as f_packets_response_delaygood,
sum(f_packets_response_delaybad) as f_packets_response_delaybad,
sum(pageopen_delaygood) as pageopen_delaygood,
sum(pageopen_delaybad) as pageopen_delaybad,
sum(http_dns_reply_delaygood) as http_dns_reply_delaygood,
sum(http_dns_reply_delaybad) as http_dns_reply_delaybad,
sum(connect_good) as connect_good,
sum(connect_bad) as connect_bad,
sum(dns_reply_delaygood) as dns_reply_delaygood,
sum(dns_reply_delaybad) as dns_reply_delaybad,
sum(n3_http_cnt) as n3_http_cnt,
sum(videoplay_wait_duration) as videoplay_wait_duration,
sum(videoplay_wait_duration_cnt) as videoplay_wait_duration_cnt,
sum(videoplay_request_cnt) as videoplay_request_cnt,
sum(videoplay_succ_cnt) as videoplay_succ_cnt,
sum(videoplay_halt_cnt) as videoplay_halt_cnt,
sum(video_recover_duration) as video_recover_duration,
sum(video_recover_duration_cnt) as video_recover_duration_cnt,
sum(video_size) as video_size,
sum(video_dl_duration) as video_dl_duration,
sum(video_dl_duration_cnt) as video_dl_duration_cnt,
sum(video_throughput) as video_throughput,
sum(video_throughput_cnt) as video_throughput_cnt,
sum(video_bit_rate) as video_bit_rate,
sum(video_bit_rate_cnt) as video_bit_rate_cnt,
sum(video_cache_throughput) as video_cache_throughput,
sum(video_cache_throughput_cnt) as video_cache_throughput_cnt,
sum(video_halt_rate) as video_halt_rate,
sum(video_haltr_ate_cnt) as video_haltr_ate_cnt,
sum(video_avgspeed_good) as video_avgspeed_good,
sum(video_avgspeed_bad) as video_avgspeed_bad,
sum(videoplay_halt_good) as videoplay_halt_good,
sum(videoplay_halt_bad) as videoplay_halt_bad,
sum(videobit_code_good) as videobit_code_good,
sum(videobit_code_bad) as videobit_code_bad,
sum(first_data_pkg_time) as first_data_pkg_time,
sum(first_data_pkg_time_cnt) as first_data_pkg_time_cnt,
sum(last_data_pkg_time) as last_data_pkg_time,
sum(last_data_pkg_time_cnt) as last_data_pkg_time_cnt,
sum(cached_video_duration) as cached_video_duration,
sum(cached_video_duration_cnt) as cached_video_duration_cnt,
sum(n3_video_cnt) as n3_video_cnt,
sum(tcp_syn_cnt) as tcp_syn_cnt,
sum(request_cnt) as request_cnt,
sum(response_cnt) as response_cnt,
sum(auth_cnt) as auth_cnt,
sum(additional_cnt) as additional_cnt,
sum(dns_resp_succ_cnt) as dns_resp_succ_cnt,
sum(dns_resp_fail_cnt) as dns_resp_fail_cnt,
sum(dns_resp_fail_1_cnt) as dns_resp_fail_1_cnt,
sum(dns_resp_fail_2_cnt) as dns_resp_fail_2_cnt,
sum(dns_resp_fail_3_cnt) as dns_resp_fail_3_cnt,
sum(dns_resp_fail_4_cnt) as dns_resp_fail_4_cnt,
sum(dns_resp_fail_5_cnt) as dns_resp_fail_5_cnt,
sum(dns_resp_fail_6_cnt) as dns_resp_fail_6_cnt,
sum(dns_resp_fail_255_cnt) as dns_resp_fail_255_cnt,
sum(dns_resp_duration) as dns_resp_duration,
sum(dns_resp_duration_cnt) as dns_resp_duration_cnt,
sum(dns_delay_less_99ms_cnt) as dns_delay_less_99ms_cnt,
sum(dns_delay_100ms_199ms_cnt) as dns_delay_100ms_199ms_cnt,
sum(dns_delay_200ms_299ms_cnt) as dns_delay_200ms_299ms_cnt,
sum(dns_delay_300ms_399ms_cnt) as dns_delay_300ms_399ms_cnt,
sum(dns_delay_400ms_499ms_cnt) as dns_delay_400ms_499ms_cnt,
sum(dns_delay_500ms_599ms_cnt) as dns_delay_500ms_599ms_cnt,
sum(dns_delay_600ms_699ms_cnt) as dns_delay_600ms_699ms_cnt,
sum(dns_delay_700ms_1s_cnt) as dns_delay_700ms_1s_cnt,
sum(dns_delay_1s_2s_cnt) as dns_delay_1s_2s_cnt,
sum(dns_resp_more_2s_cnt) as dns_resp_more_2s_cnt,
sum(n3_dns_cnt) as n3_dns_cnt,
sum(n3_other_cnt+n3_http_cnt+n3_video_cnt+n3_dns_cnt) as n3_cnt,
count(distinct imsi_supi) as imsi_cnt,
(case when sum(nvl(output_packet,0))>0 then (sum(nvl(ul_tcp_reordering_packet,0)))/(sum(nvl(output_packet,0))) else 0 end) as ul_tcp_renum_rat,
(case when sum(nvl(input_packet,0))>0 then (sum(nvl(dl_tcp_reordering_packet,0)))/(sum(nvl(input_packet,0))) else 0 end) as dl_tcp_renum_rat,
(case when sum(nvl(output_packet,0))>0 then (sum(nvl(ul_tcp_retrans_packet,0)))/(sum(nvl(output_packet,0))) else 0 end) as ul_tcp_discordnum_rat,
(case when sum(nvl(input_packet,0))>0 then (sum(nvl(dl_tcp_retrans_packet,0)))/(sum(nvl(input_packet,0))) else 0 end) as dl_tcp_discordnum_rat,
(case when sum(nvl(duration,0))>0 then (sum(nvl(output_octets,0)))/(sum(nvl(duration,0))) else 0 end) as ul_throughput_rat,
(case when sum(nvl(duration,0))>0 then (sum(nvl(input_octets,0)))/(sum(nvl(duration,0))) else 0 end) as dl_throughput_rat,
(case when sum(nvl(http_request_cnt,0))>0 then (sum(nvl(http_succ_cnt,0)))/(sum(nvl(http_request_cnt,0))) else 0 end) as http_service_success_rat,
(case when sum(nvl(http_request_cnt,0))>0 then (sum(nvl(page_open_succ_cnt,0)))/(sum(nvl(http_request_cnt,0))) else 0 end) as page_open_success_rat,
(case when sum(nvl(tcp_connect_request_cnt,0))>0 then (sum(nvl(tcp_connect_succ_cnt,0)))/(sum(nvl(tcp_connect_request_cnt,0))) else 0 end) as tcp_build_success_rat,
(case when sum(nvl(tcp_connect_succ_cnt,0))>0 then (sum(nvl(tcp_server_response_cnt,0)))/(sum(nvl(tcp_connect_succ_cnt,0))) else 0 end) as tcp_server_success_rat,
(case when sum(nvl(tcp_server_response_cnt,0))>0 then (sum(nvl(tcp_termeral_response_cnt,0)))/(sum(nvl(tcp_server_response_cnt,0))) else 0 end) as tcp_termeral_success_rat,
(case when (sum(nvl(output_packet,0))+sum(nvl(input_packet,0)))>0 then (sum(nvl(ul_tcp_reordering_packet,0))+sum(nvl(dl_tcp_reordering_packet,0)))/(sum(nvl(output_packet,0))+sum(nvl(input_packet,0))) else 0 end) as udp_packetloss_rat,
(case when sum(nvl(http_request_cnt,0))>0 then (sum(nvl(http_noresponse_cnt,0)))/(sum(nvl(http_request_cnt,0))) else 0 end) as http_noresponse_req,
(case when sum(nvl(http_bigflow_duration,0))>0 then (sum(nvl(http_bigflow_input_octets,0))*8/1000)/(sum(nvl(http_bigflow_duration,0))/1000) else 0 end) as big_http_download_rat,
(case when sum(nvl(http_smalflow_duration,0))>0 then (sum(nvl(http_smalflow_input_octets,0))*8/1000)/(sum(nvl(http_smalflow_duration,0))/1000) else 0 end) as sm_http_download_rat,
(case when (sum(nvl(f_packets_response_delaygood,0))+sum(nvl(f_packets_response_delaybad,0)))>0 then (sum(nvl(f_packets_response_delaygood,0)))/(sum(nvl(f_packets_response_delaygood,0))+sum(nvl(f_packets_response_delaybad,0))) else 0 end) as f_packets_response_good_rat,
(case when (sum(nvl(http_dns_reply_delaygood,0))+sum(nvl(http_dns_reply_delaybad,0)))>0 then (sum(nvl(http_dns_reply_delaygood,0)))/(sum(nvl(http_dns_reply_delaygood,0))+sum(nvl(http_dns_reply_delaybad,0))) else 0 end) as http_dns_res_good_rat,
(case when (sum(nvl(pageopen_delaygood,0))+sum(nvl(pageopen_delaybad,0)))>0 then (sum(nvl(pageopen_delaygood,0)))/(sum(nvl(pageopen_delaygood,0))+sum(nvl(pageopen_delaybad,0))) else 0 end) as page_open_good_rat,
(case when (sum(nvl(first_screen_delaygood,0))+sum(nvl(first_screen_delaybad,0)))>0 then (sum(nvl(first_screen_delaygood,0)))/(sum(nvl(first_screen_delaygood,0))+sum(nvl(first_screen_delaybad,0))) else 0 end) as page_screen_good_rat,
(case when (sum(nvl(connect_good,0))+sum(nvl(connect_bad,0)))>0 then (sum(nvl(connect_good,0)))/(sum(nvl(connect_good,0))+sum(nvl(connect_bad,0))) else 0 end) as im_good_rat,
(case when (sum(nvl(chkhand_good,0))+sum(nvl(chkhand_bad,0)))>0 then (sum(nvl(chkhand_good,0)))/(sum(nvl(chkhand_good,0))+sum(nvl(chkhand_bad,0))) else 0 end) as game_good_rat,
(case when (sum(nvl(video_avgspeed_good,0))+sum(nvl(video_avgspeed_bad,0)))>0 then (sum(nvl(video_avgspeed_good,0)))/(sum(nvl(video_avgspeed_good,0))+sum(nvl(video_avgspeed_bad,0))) else 0 end) as vide_speed_good_rat,
(case when (sum(nvl(videoplay_halt_good,0))+sum(nvl(videoplay_halt_bad,0)))>0 then (sum(nvl(videoplay_halt_good,0)))/(sum(nvl(videoplay_halt_good,0))+sum(nvl(videoplay_halt_bad,0))) else 0 end) as vide_halt_good_rat,
(case when (sum(nvl(videobit_code_good,0))+sum(nvl(videobit_code_bad,0)))>0 then (sum(nvl(videobit_code_good,0)))/(sum(nvl(videobit_code_good,0))+sum(nvl(videobit_code_bad,0))) else 0 end) as bit_code_rate_good_rat,
weightedAverage(array((case when (sum(nvl(pageopen_delaygood,0))+sum(nvl(pageopen_delaybad,0)))>0 then (sum(nvl(pageopen_delaygood,0)))/(sum(nvl(pageopen_delaygood,0))+sum(nvl(pageopen_delaybad,0))) else 0 end),0.7 , (case when (sum(nvl(first_screen_delaygood,0))+sum(nvl(first_screen_delaybad,0)))>0 then (sum(nvl(first_screen_delaygood,0)))/(sum(nvl(first_screen_delaygood,0))+sum(nvl(first_screen_delaybad,0))) else 0 end),0.3)) as http_service_good_rat,
weightedAverage(array((case when (sum(nvl(video_avgspeed_good,0))+sum(nvl(video_avgspeed_bad,0)))>0 then (sum(nvl(video_avgspeed_good,0)))/(sum(nvl(video_avgspeed_good,0))+sum(nvl(video_avgspeed_bad,0))) else 0 end),0.8 , (case when (sum(nvl(videoplay_halt_good,0))+sum(nvl(videoplay_halt_bad,0)))>0 then (sum(nvl(videoplay_halt_good,0)))/(sum(nvl(videoplay_halt_good,0))+sum(nvl(videoplay_halt_bad,0))) else 0 end),0.2)) as vide_service_good_rat,
(case when (sum(nvl(rtt_ul_server_good,0))+sum(nvl(rtt_ul_server_bat,0)))>0 then (sum(nvl(rtt_ul_server_good,0)))/(sum(nvl(rtt_ul_server_good,0))+sum(nvl(rtt_ul_server_bat,0))) else 0 end) as rtt_ul_server_good_rat,
(case when (sum(nvl(rtt_dl_termeral_good,0))+sum(nvl(rtt_dl_termeral_bat,0)))>0 then (sum(nvl(rtt_dl_termeral_good,0)))/(sum(nvl(rtt_dl_termeral_good,0))+sum(nvl(rtt_dl_termeral_bat,0))) else 0 end) as rtt_dl_termeral_good_rat,
weightedAverage(array((case when (sum(nvl(rtt_ul_server_good,0))+sum(nvl(rtt_ul_server_bat,0)))>0 then (sum(nvl(rtt_ul_server_good,0)))/(sum(nvl(rtt_ul_server_good,0))+sum(nvl(rtt_ul_server_bat,0))) else 0 end), 0.3, (case when (sum(nvl(rtt_dl_termeral_good,0))+sum(nvl(rtt_dl_termeral_bat,0)))>0 then (sum(nvl(rtt_dl_termeral_good,0)))/(sum(nvl(rtt_dl_termeral_good,0))+sum(nvl(rtt_dl_termeral_bat,0))) else 0 end),0.7)) as rtt_service_good_rat,
(case when (sum(nvl(ul_upload_good,0))+sum(nvl(ul_upload_bat,0)))>0 then (sum(nvl(ul_upload_good,0)))/(sum(nvl(ul_upload_good,0))+sum(nvl(ul_upload_bat,0))) else 0 end) as ul_upload_good_rat,
(case when (sum(nvl(dl_download_good,0))+sum(nvl(dl_download_bat,0)))>0 then (sum(nvl(dl_download_good,0)))/(sum(nvl(dl_download_good,0))+sum(nvl(dl_download_bat,0))) else 0 end) as dl_download_good_rat,
weightedAverage(array(
                                                (case
                                                        when (sum(nvl(ul_upload_good,0))+sum(nvl(ul_upload_bat,0)))>0
                                                                then (sum(nvl(ul_upload_good,0)))/(sum(nvl(ul_upload_good,0))+sum(nvl(ul_upload_bat,0))) else 0 end),
                                                0.5,
                                                (case
                                                 when (sum(nvl(dl_download_good,0))+sum(nvl(dl_download_bat,0)))>0
                                                                then (sum(nvl(dl_download_good,0)))/(sum(nvl(dl_download_good,0))+sum(nvl(dl_download_bat,0))) else 0 end),
                                         0.5)) as tran_service_good_rate,
(case when (sum(nvl(output_packet,0))+sum(nvl(input_packet,0)))>0 then 1-((sum(nvl(ul_tcp_reordering_packet,0))+sum(nvl(dl_tcp_reordering_packet,0)))/(sum(nvl(output_packet,0))+sum(nvl(input_packet,0)))) else 0 end) as udp_packetaccept_good_rat,
case when app_id=19 then 
          weightedAverage(array(
            (case WHEN (sum(nvl(pageopen_delaygood,0))+sum(nvl(pageopen_delaybad,0)))>0 THEN
             (sum(nvl(pageopen_delaygood,0)))/(sum(nvl(pageopen_delaygood,0))+sum(nvl(pageopen_delaybad,0)))
             ELSE 0 end),
            0.7,
            (case
             WHEN (sum(nvl(first_screen_delaygood,0))+sum(nvl(first_screen_delaybad,0)))>0 THEN
             (sum(nvl(first_screen_delaygood,0)))/(sum(nvl(first_screen_delaygood,0))+sum(nvl(first_screen_delaybad,0)))
             ELSE 0 end),
            0.3))
     when app_id=2 then 
          weightedAverage(array(
            (case WHEN (sum(nvl(video_avgspeed_good,0))+sum(nvl(video_avgspeed_bad,0)))>0 THEN
             (sum(nvl(video_avgspeed_good,0)))/(sum(nvl(video_avgspeed_good,0))+sum(nvl(video_avgspeed_bad,0)))
             ELSE 0 end),
            0.8,
            (case
             WHEN (sum(nvl(videoplay_halt_good,0))+sum(nvl(videoplay_halt_bad,0)))>0 THEN
             (sum(nvl(videoplay_halt_good,0)))/(sum(nvl(videoplay_halt_good,0))+sum(nvl(videoplay_halt_bad,0)))
             ELSE 0 end),
            0.2))
     when app_id=1 then 
          (case WHEN (sum(nvl(connect_good,0))+sum(nvl(connect_bad,0)))>0 THEN
            (sum(nvl(connect_good,0)))/(sum(nvl(connect_good,0))+sum(nvl(connect_bad,0)))
            ELSE 0 end)
     when app_id=5 then 
          (case WHEN (sum(nvl(chkhand_good,0))+sum(nvl(chkhand_bad,0)))>0 THEN
            (sum(nvl(chkhand_good,0)))/(sum(nvl(chkhand_good,0))+sum(nvl(chkhand_bad,0)))
            ELSE 0 end) else null end as service_perceive_good_rat,
(case when sum(nvl(request_cnt,0))>0 then (sum(nvl(dns_resp_succ_cnt,0)))/(sum(nvl(request_cnt,0))) else 0 end) as dns_resp_succ_rate,
sum(n3_game_cnt) as n3_game_cnt,
sum(game_tcp_avg_total_delay) as game_tcp_avg_total_delay,
sum(game_tcp_avg_total_delay_cnt) as game_tcp_avg_total_delay_cnt,
sum(game_udp_avg_total_delay) as game_udp_avg_total_delay,
sum(game_udp_avg_total_delay_cnt) as game_udp_avg_total_delay_cnt,
sum(game_tcp_avg_server_good) as game_tcp_avg_server_good,
sum(game_tcp_avg_server_bat) as game_tcp_avg_server_bat,
sum(game_udp_avg_server_good) as game_udp_avg_server_good,
sum(game_udp_avg_server_bat) as game_udp_avg_server_bat,
(case when (sum(nvl(game_tcp_avg_total_delay_cnt,0)))>0 then (sum(nvl(game_tcp_avg_total_delay,0)))/(sum(nvl(game_tcp_avg_total_delay_cnt,0))) else 0 end) as game_tcp_avg_delay,
(case when (sum(nvl(game_udp_avg_total_delay_cnt,0)))>0 then (sum(nvl(game_udp_avg_total_delay,0)))/(sum(nvl(game_udp_avg_total_delay_cnt,0))) else 0 end) as game_udp_avg_delay,
(case when (sum(nvl(game_tcp_avg_server_good,0))+sum(nvl(game_tcp_avg_server_bat,0)))>0 then (sum(nvl(game_tcp_avg_server_good,0)))/(sum(nvl(game_tcp_avg_server_good,0))+sum(nvl(game_tcp_avg_server_bat,0))) else 0 end) as game_tcp_avg_server_good_rate,
(case when (sum(nvl(game_udp_avg_server_good,0))+sum(nvl(game_udp_avg_server_bat,0)))>0 then (sum(nvl(game_udp_avg_server_good,0)))/(sum(nvl(game_udp_avg_server_good,0))+sum(nvl(game_udp_avg_server_bat,0))) else 0 end) as game_udp_avg_server_good_rate,
(case when (sum(nvl(game_tcp_avg_server_good,0))+sum(nvl(game_tcp_avg_server_bat,0))+sum(nvl(game_udp_avg_server_good,0))+sum(nvl(game_udp_avg_server_bat,0)))>0 then (sum(nvl(game_tcp_avg_server_good,0))+sum(nvl(game_udp_avg_server_good,0)))/(sum(nvl(game_tcp_avg_server_good,0))+sum(nvl(game_tcp_avg_server_bat,0))+sum(nvl(game_udp_avg_server_good,0))+sum(nvl(game_udp_avg_server_bat,0))) else 0 end) as game_avg_server_good_rate
from ${source_db}.dw_ct_xdr_lte_5g_s1u_n3_ohvd_sp_usrcity_ where p_date>='${p_date_start}' and p_date<'${p_date_end}' 

						  ]]>
            </sql>
        </resultTable>
	</resultTables>
	</AggrSqlConfig>