<AggrSqlConfig topicId="dm_ct_xdr_lte_5g_s1u_n3_ohvd_geo_d" period="1d"
               desc="全国、大区、省、城市_用户面-4/5G话单-other/http/video/dns(1天)">
      <functions>
	  </functions>

    <tempTables>
	
    </tempTables>

    <resultTables>
	        <resultTable>
	<sql>
		<![CDATA[
			insert overwrite table ${result_db}.dm_ct_xdr_lte_5g_s1u_n3_ohvd_geo_d partition(p_date='${p_date}')
		
select substr('${p_start_time}',1,8) as starttime,
1.ne_type=1277,赋值 1
2.ne_type=1278,赋值 province_id
3.ne_type=1279,赋值 region_id
4.ne_type=1280,赋值 city_id as geo_id,
（根据dm表的空间汇总维度手工填写）
1277:全国
1278:大区
1279:城市
1280:区县 as ne_type,
province_id（全国维度，此指标为空） as province_id,
province_name（全国维度，此指标为空） as province_name,
'' as area_id,
'' as area_name,
region_id（全国、大区、区域维度，此指标为空） as region_id,
region_name（全国、大区、区域维度，此指标为空） as region_name,
city_id（全国、大区、区域、城市维度，此指标为空） as city_id,
city_name（全国、大区、区域、城市维度，此指标为空） as city_name,
imsi_cnt as imsi_cnt,
duration as duration,
n3_cnt as n3_cnt,
total_data as total_data,
f_packets_response_good_rat as f_packets_response_good_rat,
http_dns_res_good_rat as http_dns_res_good_rat,
page_open_good_rat as page_open_good_rat,
page_screen_good_rat as page_screen_good_rat,
im_good_rat as im_good_rat,
game_good_rat as game_good_rat,
vide_speed_good_rat as vide_speed_good_rat,
vide_halt_good_rat as vide_halt_good_rat,
bit_code_rate_good_rat as bit_code_rate_good_rat,
http_service_good_rat as http_service_good_rat,
vide_service_good_rat as vide_service_good_rat,
rtt_ul_server_good_rat as rtt_ul_server_good_rat,
rtt_dl_termeral_good_rat as rtt_dl_termeral_good_rat,
rtt_service_good_rat as rtt_service_good_rat,
ul_upload_good_rat as ul_upload_good_rat,
dl_download_good_rat as dl_download_good_rat,
tran_service_good_rate as tran_service_good_rate,
service_perceive_good_rat as service_perceive_good_rat,
sum(output_packet) as output_packet,
sum(input_packet) as input_packet,
sum(ul_tcp_reordering_packet) as ul_tcp_reordering_packet,
sum(dl_tcp_reordering_packet) as dl_tcp_reordering_packet,
sum(http_dl_rate_data) as http_dl_rate_data,
sum(http_dl_rate_data_cnt) as http_dl_rate_data_cnt,
sum(http_ul_rate_data) as http_ul_rate_data,
sum(http_ul_rate_data_cnt) as http_ul_rate_data_cnt,
sum(game_conn_delay) as game_conn_delay,
sum(game_conn_delay_cnt) as game_conn_delay_cnt,
sum(chkhand_good) as chkhand_good,
sum(chkhand_bad) as chkhand_bad,
sum(rtt_ul_server_good) as rtt_ul_server_good,
sum(rtt_ul_server_bat) as rtt_ul_server_bat,
sum(rtt_dl_termeral_good) as rtt_dl_termeral_good,
sum(rtt_dl_termeral_bat) as rtt_dl_termeral_bat,
sum(n3_other_cnt) as n3_other_cnt,
sum(http_request_cnt) as http_request_cnt,
sum(http_succ_cnt) as http_succ_cnt,
sum(http_respdelay) as http_respdelay,
sum(http_respdelay_cnt) as http_respdelay_cnt,
sum(tcp_send_delay) as tcp_send_delay,
sum(tcp_send_delay_cnt) as tcp_send_delay_cnt,
sum(tcp_receive_delay) as tcp_receive_delay,
sum(tcp_receive_delay_cnt) as tcp_receive_delay_cnt,
sum(f_packets_response_delay) as f_packets_response_delay,
sum(f_packets_response_delay_cnt) as f_packets_response_delay_cnt,
sum(dns_reply_delay) as dns_reply_delay,
sum(dns_reply_delay_cnt) as dns_reply_delay_cnt,
sum(first_tcp_pageopen_delay) as first_tcp_pageopen_delay,
sum(first_tcp_pageopen_delay_cnt) as first_tcp_pageopen_delay_cnt,
sum(first_screen_delay) as first_screen_delay,
sum(first_screen_delay_cnt) as first_screen_delay_cnt,
sum(first_screen_delaygood) as first_screen_delaygood,
sum(first_screen_delaybad) as first_screen_delaybad,
sum(f_packets_response_delaygood) as f_packets_response_delaygood,
sum(f_packets_response_delaybad) as f_packets_response_delaybad,
sum(pageopen_delaygood) as pageopen_delaygood,
sum(pageopen_delaybad) as pageopen_delaybad,
sum(http_dns_reply_delaygood) as http_dns_reply_delaygood,
sum(http_dns_reply_delaybad) as http_dns_reply_delaybad,
sum(connect_good) as connect_good,
sum(connect_bad) as connect_bad,
sum(n3_http_cnt) as n3_http_cnt,
sum(video_throughput) as video_throughput,
sum(video_throughput_cnt) as video_throughput_cnt,
sum(video_bit_rate) as video_bit_rate,
sum(video_bit_rate_cnt) as video_bit_rate_cnt,
sum(video_cache_throughput) as video_cache_throughput,
sum(video_cache_throughput_cnt) as video_cache_throughput_cnt,
sum(video_halt_rate) as video_halt_rate,
sum(video_haltr_ate_cnt) as video_haltr_ate_cnt,
sum(video_avgspeed_good) as video_avgspeed_good,
sum(video_avgspeed_bad) as video_avgspeed_bad,
sum(videoplay_halt_good) as videoplay_halt_good,
sum(videoplay_halt_bad) as videoplay_halt_bad,
sum(n3_video_cnt) as n3_video_cnt,
sum(request_cnt) as request_cnt,
sum(dns_resp_succ_cnt) as dns_resp_succ_cnt,
sum(n3_dns_cnt) as n3_dns_cnt,
sum(game_udp_avg_total_delay) as game_udp_avg_total_delay,
sum(game_udp_avg_total_delay_cnt) as game_udp_avg_total_delay_cnt,
(case when sum(nvl(tcp_send_delay_cnt,0))>0 then (sum(nvl(tcp_send_delay,0)))/(sum(nvl(tcp_send_delay_cnt,0))) else 0 end) as tcp_send_avg_delay,
(case when sum(nvl(tcp_receive_delay_cnt,0))>0 then (sum(nvl(tcp_receive_delay,0)))/(sum(nvl(tcp_receive_delay_cnt,0))) else 0 end) as tcp_receive_avg_delay,
(case when sum(nvl(tcp_send_delay_cnt,0))<>0 and sum(nvl(tcp_receive_delay_cnt,0))=0 then (sum(nvl(tcp_send_delay,0)))/(sum(nvl(tcp_send_delay_cnt,0))) 
when sum(nvl(tcp_send_delay_cnt,0))=0 and sum(nvl(tcp_receive_delay_cnt,0))<>0 then (sum(nvl(tcp_receive_delay,0)))/(sum(nvl(tcp_receive_delay_cnt,0))) 
when sum(nvl(tcp_send_delay_cnt,0))<>0 and sum(nvl(tcp_receive_delay_cnt,0))<>0 then (sum(nvl(tcp_send_delay,0))+sum(nvl(tcp_receive_delay,0)))/(sum(nvl(tcp_send_delay_cnt,0))+sum(nvl(tcp_receive_delay_cnt,0))) else 0 end) as tcp_avg_delay,
(case when sum(nvl(game_conn_delay_cnt,0))>0 then (sum(nvl(game_conn_delay,0)))/(sum(nvl(game_conn_delay_cnt,0))) else 0 end) as game_conn_avg_delay,
(case when sum(nvl(http_dl_rate_data_cnt,0))>0 then (sum(nvl(http_dl_rate_data,0)))/(sum(nvl(http_dl_rate_data_cnt,0))) else 0 end) as http_dl_rate_avg_data,
(case when sum(nvl(http_ul_rate_data_cnt,0))>0 then (sum(nvl(http_ul_rate_data,0)))/(sum(nvl(http_ul_rate_data_cnt,0))) else 0 end) as http_ul_rate_avg_data,
(case when sum(nvl(first_tcp_pageopen_delay_cnt,0))>0 then (sum(nvl(first_tcp_pageopen_delay,0)))/(sum(nvl(first_tcp_pageopen_delay_cnt,0))) else 0 end) as first_tcp_pageopen_avg_delay,
(case when sum(nvl(first_screen_delay_cnt,0))>0 then (sum(nvl(first_screen_delay,0)))/(sum(nvl(first_screen_delay_cnt,0))) else 0 end) as first_screen_avg_delay,
(case when sum(nvl(video_throughput_cnt,0))>0 then (sum(nvl(video_throughput,0)))/(sum(nvl(video_throughput_cnt,0))) else 0 end) as video_throughput_rate,
(case when sum(nvl(video_cache_throughput_cnt,0))>0 then (sum(nvl(video_cache_throughput,0)))/(sum(nvl(video_cache_throughput_cnt,0))) else 0 end) as video_cache_throughput_rate,
(case when sum(nvl(video_haltr_ate_cnt,0))>0 then (sum(nvl(video_halt_rate,0)))/(sum(nvl(video_haltr_ate_cnt,0))) else 0 end) as video_halt_avg_rate,
(case when sum(nvl(video_bit_rate_cnt,0))>0 then ((sum(nvl(video_throughput,0)))/(sum(nvl(video_throughput_cnt,0))))/((sum(nvl(video_bit_rate,0)))/(sum(nvl(video_bit_rate_cnt,0)))) else 0 end) as video_rate_ratio,
(case when sum(nvl(f_packets_response_delay_cnt,0))>0 then (sum(nvl(f_packets_response_delay,0)))/(sum(nvl(f_packets_response_delay_cnt,0))) else 0 end) as f_packets_response_avg_delay,
(case when sum(nvl(dns_reply_delay_cnt,0))>0 then (sum(nvl(dns_reply_delay,0)))/(sum(nvl(dns_reply_delay_cnt,0))) else 0 end) as dns_reply_avg_delay,
(case when sum(nvl(request_cnt,0))>0 then (sum(nvl(dns_resp_succ_cnt,0)))/(sum(nvl(request_cnt,0))) else 0 end) as dns_resp_succ_rate,
(case when (sum(nvl(output_packet,0))+sum(nvl(input_packet,0)))>0 then (sum(nvl(ul_tcp_reordering_packet,0))+sum(nvl(dl_tcp_reordering_packet,0)))/(sum(nvl(output_packet,0))+sum(nvl(input_packet,0))) else 0 end) as udp_packetloss_rat,
(case when sum(nvl(http_respdelay_cnt,0))>0 then (sum(nvl(http_respdelay,0)))/(sum(nvl(http_respdelay_cnt,0))) else 0 end) as http_avg_respdelay,
(case when sum(nvl(http_request_cnt,0))>0 then (sum(nvl(http_succ_cnt,0)))/(sum(nvl(http_request_cnt,0))) else 0 end) as http_service_success_rat,
(case when sum(nvl(game_udp_avg_total_delay_cnt,0))>0 then (sum(nvl(game_udp_avg_total_delay,0)))/(sum(nvl(game_udp_avg_total_delay_cnt,0))) else 0 end) as game_udp_avg_delay
from ${source_db}.dm_ct_xdr_lte_5g_s1u_n3_ohvd_city_d
dm_ct_xdr_lte_5g_s1u_n3_ohvd_region_d
dm_ct_xdr_lte_5g_s1u_n3_ohvd_area_d
dm_ct_xdr_lte_5g_s1u_n3_ohvd_prov_d
dm_ct_xdr_lte_5g_s1u_n3_ohvd_cy_ where p_date>='${p_date_start}' and p_date<'${p_date_end}' 

						  ]]>
            </sql>
        </resultTable>
	</resultTables>
	</AggrSqlConfig>