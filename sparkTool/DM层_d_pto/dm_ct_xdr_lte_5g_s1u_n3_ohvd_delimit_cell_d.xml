<AggrSqlConfig topicId="dm_ct_xdr_lte_5g_s1u_n3_ohvd_delimit_cell_d" period="1d"
               desc="小区-4/5G话单-OTHER/HTTP/VIDEO/DNS/S1MME-单小区定界定段(1天)">
      <functions>
	  </functions>

    <tempTables>
	 <tableName>tmp_dm_ct_xdr_lte_5g_s1u</tableName>
<sql>
<![CDATA[select 

,
",
"",
00:00:00,
23:59:59,
00:00:00~2020,
abnormal_record_num,
0 as chkhand_bad,
0 as chkhand_good,
concat,
0 as abnormal_record_rate,
dw_ct_xdr_lte_5g_s1u_n3_dns_delimitcell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_celkqi_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_celkqi_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_iprancell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_iprancell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_sgwcell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_sgwcell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_spipcell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_spipcell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_termcell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_termcell_d.total_record_num,
dw_ct_xdr_lte_s1u_s1mme_mmecell_d.abnormal_record_num,
dw_ct_xdr_lte_s1u_s1mme_mmecell_d.total_record_num,
0 as http_dns_reply_delaybad,
0 as http_dns_reply_delaygood,
nci_eci,
or,
0 as pageopen_delaybad,
0 as pageopen_delaygood,
province_id,
province_name,
0 as region_id,
0 as region_name,
0 as rtt_dl_termeral_bat,
0 as rtt_dl_termeral_good,
0 as rtt_ul_server_bat,
0 as rtt_ul_server_good,
starttime,
total_record_num,
0 as video_avgspeed_bad,
0 as video_avgspeed_good,
例原话单为2020,
开始时间为2020,
dw_ct_xdr_lte_5g_s1u_n3_dns_delimitcell_d.abnormal_record_num
 from ${source_db}.dw_ct_xdr_lte_5g_s1u_n3_dns_delimitcell_d
where p_date>='${p_date_start}' and p_date<'${p_date_end}'
 union all
 select

,
",
"",
00:00:00,
23:59:59,
00:00:00~2020,
abnormal_record_num,
chkhand_bad,
chkhand_good,
concat,
abnormal_record_rate,
dw_ct_xdr_lte_5g_s1u_n3_dns_delimitcell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_celkqi_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_celkqi_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_iprancell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_iprancell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_sgwcell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_sgwcell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_spipcell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_spipcell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_termcell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_termcell_d.total_record_num,
dw_ct_xdr_lte_s1u_s1mme_mmecell_d.abnormal_record_num,
dw_ct_xdr_lte_s1u_s1mme_mmecell_d.total_record_num,
http_dns_reply_delaybad,
http_dns_reply_delaygood,
nci_eci,
or,
pageopen_delaybad,
pageopen_delaygood,
province_id,
province_name,
region_id,
region_name,
rtt_dl_termeral_bat,
rtt_dl_termeral_good,
rtt_ul_server_bat,
rtt_ul_server_good,
starttime,
total_record_num,
video_avgspeed_bad,
video_avgspeed_good,
例原话单为2020,
开始时间为2020,
dw_ct_xdr_lte_5g_s1u_n3_dns_delimitcell_d.abnormal_record_num
 from ${source_db}.dw_ct_xdr_lte_5g_s1u_n3_ohv_celkqi_d
where p_date>='${p_date_start}' and p_date<'${p_date_end}'
 union all
 select

,
",
"",
00:00:00,
23:59:59,
00:00:00~2020,
abnormal_record_num,
0 as chkhand_bad,
0 as chkhand_good,
concat,
0 as abnormal_record_rate,
dw_ct_xdr_lte_5g_s1u_n3_dns_delimitcell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_celkqi_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_celkqi_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_iprancell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_iprancell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_sgwcell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_sgwcell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_spipcell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_spipcell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_termcell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_termcell_d.total_record_num,
dw_ct_xdr_lte_s1u_s1mme_mmecell_d.abnormal_record_num,
dw_ct_xdr_lte_s1u_s1mme_mmecell_d.total_record_num,
0 as http_dns_reply_delaybad,
0 as http_dns_reply_delaygood,
nci_eci,
or,
0 as pageopen_delaybad,
0 as pageopen_delaygood,
province_id,
province_name,
0 as region_id,
0 as region_name,
0 as rtt_dl_termeral_bat,
0 as rtt_dl_termeral_good,
0 as rtt_ul_server_bat,
0 as rtt_ul_server_good,
starttime,
total_record_num,
0 as video_avgspeed_bad,
0 as video_avgspeed_good,
例原话单为2020,
开始时间为2020,
dw_ct_xdr_lte_5g_s1u_n3_dns_delimitcell_d.abnormal_record_num
 from ${source_db}.dw_ct_xdr_lte_5g_s1u_n3_ohv_iprancell_d
where p_date>='${p_date_start}' and p_date<'${p_date_end}'
 union all
 select

,
",
"",
00:00:00,
23:59:59,
00:00:00~2020,
0 as abnormal_record_num,
0 as chkhand_bad,
0 as chkhand_good,
concat,
0 as abnormal_record_rate,
dw_ct_xdr_lte_5g_s1u_n3_dns_delimitcell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_celkqi_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_celkqi_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_iprancell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_iprancell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_sgwcell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_sgwcell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_spipcell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_spipcell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_termcell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_termcell_d.total_record_num,
dw_ct_xdr_lte_s1u_s1mme_mmecell_d.abnormal_record_num,
dw_ct_xdr_lte_s1u_s1mme_mmecell_d.total_record_num,
0 as http_dns_reply_delaybad,
0 as http_dns_reply_delaygood,
nci_eci,
or,
0 as pageopen_delaybad,
0 as pageopen_delaygood,
province_id,
province_name,
0 as region_id,
0 as region_name,
0 as rtt_dl_termeral_bat,
0 as rtt_dl_termeral_good,
0 as rtt_ul_server_bat,
0 as rtt_ul_server_good,
starttime,
0 as total_record_num,
0 as video_avgspeed_bad,
0 as video_avgspeed_good,
例原话单为2020,
开始时间为2020,
dw_ct_xdr_lte_5g_s1u_n3_dns_delimitcell_d.abnormal_record_num
 from ${source_db}.dw_ct_xdr_lte_5g_s1u_n3_ohv_sgwcell_d
where p_date>='${p_date_start}' and p_date<'${p_date_end}'
 union all
 select

,
",
"",
00:00:00,
23:59:59,
00:00:00~2020,
abnormal_record_num,
0 as chkhand_bad,
0 as chkhand_good,
concat,
0 as abnormal_record_rate,
dw_ct_xdr_lte_5g_s1u_n3_dns_delimitcell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_celkqi_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_celkqi_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_iprancell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_iprancell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_sgwcell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_sgwcell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_spipcell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_spipcell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_termcell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_termcell_d.total_record_num,
dw_ct_xdr_lte_s1u_s1mme_mmecell_d.abnormal_record_num,
dw_ct_xdr_lte_s1u_s1mme_mmecell_d.total_record_num,
0 as http_dns_reply_delaybad,
0 as http_dns_reply_delaygood,
nci_eci,
or,
0 as pageopen_delaybad,
0 as pageopen_delaygood,
province_id,
province_name,
0 as region_id,
0 as region_name,
0 as rtt_dl_termeral_bat,
0 as rtt_dl_termeral_good,
0 as rtt_ul_server_bat,
0 as rtt_ul_server_good,
starttime,
total_record_num,
0 as video_avgspeed_bad,
0 as video_avgspeed_good,
例原话单为2020,
开始时间为2020,
dw_ct_xdr_lte_5g_s1u_n3_dns_delimitcell_d.abnormal_record_num
 from ${source_db}.dw_ct_xdr_lte_5g_s1u_n3_ohv_termcell_d
where p_date>='${p_date_start}' and p_date<'${p_date_end}'
 union all
 select

,
",
"",
00:00:00,
23:59:59,
00:00:00~2020,
abnormal_record_num,
0 as chkhand_bad,
0 as chkhand_good,
concat,
0 as abnormal_record_rate,
dw_ct_xdr_lte_5g_s1u_n3_dns_delimitcell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_celkqi_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_celkqi_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_iprancell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_iprancell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_sgwcell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_sgwcell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_spipcell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_spipcell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_termcell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_termcell_d.total_record_num,
dw_ct_xdr_lte_s1u_s1mme_mmecell_d.abnormal_record_num,
dw_ct_xdr_lte_s1u_s1mme_mmecell_d.total_record_num,
0 as http_dns_reply_delaybad,
0 as http_dns_reply_delaygood,
nci_eci,
or,
0 as pageopen_delaybad,
0 as pageopen_delaygood,
province_id,
province_name,
0 as region_id,
0 as region_name,
0 as rtt_dl_termeral_bat,
0 as rtt_dl_termeral_good,
0 as rtt_ul_server_bat,
0 as rtt_ul_server_good,
starttime,
total_record_num,
0 as video_avgspeed_bad,
0 as video_avgspeed_good,
例原话单为2020,
开始时间为2020,
dw_ct_xdr_lte_5g_s1u_n3_dns_delimitcell_d.abnormal_record_num
 from ${source_db}.dw_ct_xdr_lte_5g_s1u_n3_ohv_spipcell_d
where p_date>='${p_date_start}' and p_date<'${p_date_end}'
 union all
 select

,
",
"",
00:00:00,
23:59:59,
00:00:00~2020,
0 as abnormal_record_num,
0 as chkhand_bad,
0 as chkhand_good,
concat,
0 as abnormal_record_rate,
dw_ct_xdr_lte_5g_s1u_n3_dns_delimitcell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_celkqi_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_celkqi_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_iprancell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_iprancell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_sgwcell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_sgwcell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_spipcell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_spipcell_d.total_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_termcell_d.abnormal_record_num,
dw_ct_xdr_lte_5g_s1u_n3_ohv_termcell_d.total_record_num,
dw_ct_xdr_lte_s1u_s1mme_mmecell_d.abnormal_record_num,
dw_ct_xdr_lte_s1u_s1mme_mmecell_d.total_record_num,
0 as http_dns_reply_delaybad,
0 as http_dns_reply_delaygood,
nci_eci,
or,
0 as pageopen_delaybad,
0 as pageopen_delaygood,
province_id,
province_name,
0 as region_id,
0 as region_name,
0 as rtt_dl_termeral_bat,
0 as rtt_dl_termeral_good,
0 as rtt_ul_server_bat,
0 as rtt_ul_server_good,
starttime,
0 as total_record_num,
0 as video_avgspeed_bad,
0 as video_avgspeed_good,
例原话单为2020,
开始时间为2020,
dw_ct_xdr_lte_5g_s1u_n3_dns_delimitcell_d.abnormal_record_num
 from ${source_db}.dw_ct_xdr_lte_s1u_s1mme_mmecell_
where p_date>='${p_date_start}' and p_date<'${p_date_end}'
 	]]>
		</sql>
    </tempTables>

    <resultTables>
	        <resultTable>
	<sql>
		<![CDATA[
			insert overwrite table ${result_db}.dm_ct_xdr_lte_5g_s1u_n3_ohvd_delimit_cell_d partition(p_date='${p_date}')
		
 select substr('${p_start_time}',1,8) as starttime,
province_id as province_id,
max(province_name) as province_name,
nci_eci as nci_eci,
region_id as region_id,
max(region_name) as region_name,
case when sum(dw_ct_xdr_lte_s1u_s1mme_mmecell_d.abnormal_record_num)/sum(dw_ct_xdr_lte_s1u_s1mme_mmecell_d.total_record_num)>=0.3 or sum(dw_ct_xdr_lte_5g_s1u_n3_ohv_sgwcell_d.abnormal_record_num)/sum(dw_ct_xdr_lte_5g_s1u_n3_ohv_sgwcell_d.total_record_num)>=0.3  then 1 else 0 end as sgwcell_mme_abnormal_flag,
case when sum(abnormal_record_num)/sum(total_record_num)>=0.35 then 1 else 0 end as spipcell_abnormal_flag,
case when sum(abnormal_record_num)/sum(total_record_num)>=0.35 then 1 else 0 end as ipranacell_abnormal_flag,
case when sum(abnormal_record_num)/sum(total_record_num)>=0.3 then 1 else 0 end as dnscell_abnormal_flag,
case when sum(abnormal_record_num)/sum(total_record_num)>=0.3 then 1 else 0 end as celkqicell_abnormal_flag,
case when sum(abnormal_record_num)/sum(total_record_num)>=0.4 then 1 else 0 end as termcell_abnormal_flag,
total_record_num as cell_total_record_num,
abnormal_record_num as cell_abnormal_record_num,
abnormal_record_rate as cell_abnormal_record_rate,
rtt_ul_server_bat as cell_ul_rtt_delay_abnormal_num,
(case when nvl(rtt_ul_server_good+rtt_ul_server_bat,0)>0 then (nvl(rtt_ul_server_bat,0))/(nvl(rtt_ul_server_good+rtt_ul_server_bat,0)) else 0 end) as cell_ul_rtt_delay_abnormal_rate,
rtt_dl_termeral_bat as cell_dl_rtt_delay_abnormal_num,
(case when nvl(rtt_dl_termeral_good+rtt_dl_termeral_bat,0)>0 then (nvl(rtt_dl_termeral_bat,0))/(nvl(rtt_dl_termeral_good+rtt_dl_termeral_bat,0)) else 0 end) as cell_dl_rtt_delay_abnormal_rate,
pageopen_delaybad as cell_webpage_delay_abnormal_num,
(case when nvl(pageopen_delaygood+pageopen_delaybad,0)>0 then (nvl(pageopen_delaybad,0))/(nvl(pageopen_delaygood+pageopen_delaybad,0)) else 0 end) as cell_webpage_delay_abnormal_rate,
video_avgspeed_bad as cell_video_download_abnormal_num,
(case when nvl(video_avgspeed_good+video_avgspeed_bad,0)>0 then (nvl(video_avgspeed_bad,0))/(nvl(video_avgspeed_good+video_avgspeed_bad,0)) else 0 end) as cell_video_download_abnormal_rate,
chkhand_bad as cell_game_chkhand_abnormal_num,
(case when nvl(chkhand_good+chkhand_bad,0)>0 then (nvl(chkhand_bad,0))/(nvl(chkhand_good+chkhand_bad,0)) else 0 end) as cell_game_chkhand_abnormal_rate,
http_dns_reply_delaybad as cell_reply_delay_abnormal_num,
(case when nvl(http_dns_reply_delaygood+http_dns_reply_delaybad,0)>0 then (nvl(http_dns_reply_delaybad,0))/(nvl(http_dns_reply_delaygood+http_dns_reply_delaybad,0)) else 0 end) as cell_reply_delay_abnormal_rate,
concat((case when sum(dw_ct_xdr_lte_s1u_s1mme_mmecell_d.abnormal_record_num)/sum(dw_ct_xdr_lte_s1u_s1mme_mmecell_d.total_record_num)>=0.3 or sum(dw_ct_xdr_lte_5g_s1u_n3_ohv_sgwcell_d.abnormal_record_num)/sum(dw_ct_xdr_lte_5g_s1u_n3_ohv_sgwcell_d.total_record_num)>=0.3  then 1 else 0 end), ",",
(case when sum(dw_ct_xdr_lte_5g_s1u_n3_ohv_spipcell_d.abnormal_record_num)/sum(dw_ct_xdr_lte_5g_s1u_n3_ohv_spipcell_d.total_record_num)>=0.35 then 2 else 0 end), "","",(case when sum(dw_ct_xdr_lte_5g_s1u_n3_ohv_iprancell_d.abnormal_record_num)/sum(dw_ct_xdr_lte_5g_s1u_n3_ohv_iprancell_d.total_record_num)>=0.35 then 3 else 0 end), "","",
(case when sum(dw_ct_xdr_lte_5g_s1u_n3_ohv_termcell_d.abnormal_record_num)/sum(dw_ct_xdr_lte_5g_s1u_n3_ohv_termcell_d.total_record_num)>=0.4 then 4 else 0 end), "","",(case when sum(dw_ct_xdr_lte_5g_s1u_n3_dns_delimitcell_d.abnormal_record_num)/sum(dw_ct_xdr_lte_5g_s1u_n3_dns_delimitcell_d.total_record_num)>=0.3 then 5 else 0 end), "","",
(case when sum(dw_ct_xdr_lte_5g_s1u_n3_ohv_celkqi_d.abnormal_record_num)/sum(dw_ct_xdr_lte_5g_s1u_n3_ohv_celkqi_d.total_record_num)>=0.3 then 6 else 0 end)) as delimitation_conclusion,
concat((case when sum(dw_ct_xdr_lte_s1u_s1mme_mmecell_d.abnormal_record_num)/sum(dw_ct_xdr_lte_s1u_s1mme_mmecell_d.total_record_num)>=0.3 or sum(dw_ct_xdr_lte_5g_s1u_n3_ohv_sgwcell_d.abnormal_record_num)/sum(dw_ct_xdr_lte_5g_s1u_n3_ohv_sgwcell_d.total_record_num)>=0.3  then 1 else 0 end), ",",
(case when sum(dw_ct_xdr_lte_5g_s1u_n3_ohv_spipcell_d.abnormal_record_num)/sum(dw_ct_xdr_lte_5g_s1u_n3_ohv_spipcell_d.total_record_num)>=0.35 then 2 else 0 end), "","",(case when sum(dw_ct_xdr_lte_5g_s1u_n3_ohv_iprancell_d.abnormal_record_num)/sum(dw_ct_xdr_lte_5g_s1u_n3_ohv_iprancell_d.total_record_num)>=0.35 then 3 else 0 end), "","",
(case when sum(dw_ct_xdr_lte_5g_s1u_n3_ohv_termcell_d.abnormal_record_num)/sum(dw_ct_xdr_lte_5g_s1u_n3_ohv_termcell_d.total_record_num)>=0.4 then 4 else 0 end), "","",(case when sum(dw_ct_xdr_lte_5g_s1u_n3_dns_delimitcell_d.abnormal_record_num)/sum(dw_ct_xdr_lte_5g_s1u_n3_dns_delimitcell_d.total_record_num)>=0.3 then 5 else 0 end), "","",
(case when sum(dw_ct_xdr_lte_5g_s1u_n3_ohv_celkqi_d.abnormal_record_num)/sum(dw_ct_xdr_lte_5g_s1u_n3_ohv_celkqi_d.total_record_num)>=0.3 then 6 else 0 end)) as treatment_suggestion
from 
(select * from tmp_dm_ct_xdr_lte_5g_s1u 
) t1 
 inner join (select distinct eci,ne_type from dim_ne_ec where ne_type='EUTRANCELL') t8 on t1.nci_eci=t8.eci

						  ]]>
            </sql>
        </resultTable>
	</resultTables>
	</AggrSqlConfig>